version: '3'

services:
  db:
    image: postgres:14-alpine3.17
    container_name: db_app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - '5440:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d postgres -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    container_name: redis_app
    command: redis-server --save "" --appendonly no --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - '6380:6379'
      - '9999:8001'

  app:
    build: .
    container_name: app_app
    env_file:
      - .env
    tty: true
    command: >
      bash -c "python manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"

    volumes:
      - static:/docker_code/static/
      - media:/docker_code/media/
      - ./.env.docker:/code/.env
    ports:
      - '8000:8000'
    depends_on:
      - db
      - redis



  celery:
    build: .
    container_name: celery_app
    command: >
      bash -c "celery -A config worker --beat --loglevel=info"
    volumes:
      - .:/docker_code
      - ./.env.docker:/code/.env
    links:
      - redis
    depends_on:
      - app
      - redis

volumes:
  postgres_data:
  redis_data:
  static:
  media: